services:
  client-web:
    container_name: client-web
    build:
      context: ./client-web
      dockerfile: dev.Dockerfile
    env_file:
      - /client-web/.env
    volumes:
      - ./client-web/src:/app/src
      - ./client-web/public:/app/public
    restart: always
    ports:
      - 3000:3000
    networks:
      - mda-network

  main-backend-api:
    container_name: main-backend-api
    build:
      context: ./server/main-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./server/main-backend:/usr/src/app
    ports:
      - 7070:7070
    env_file:
      - ./server/main-backend/.env
    restart: always
    depends_on:
      - postgres-db
      - redis-db
    networks:
      - mda-network

  file-server:
    build:
      context: ./server/file-server
      dockerfile: dev.Dockerfile
    container_name: file-server
    ports:
      - '5500:5500'
    volumes:
      - ./accounts:/accounts
    networks:
      - mda-network

  postgres-db:
    image: postgres:latest
    container_name: postgres-container-mda
    environment:
      POSTGRES_USER: alx
      POSTGRES_PASSWORD: serbvn
      POSTGRES_DB: mda_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./server:/docker-entrypoint-initdb.d   TODO: implement table initialization script
    restart: always
    networks:
      - mda-network
    # Adding hostname for easier connection
    hostname: postgres
    
  redis-db:
    image: redis:latest
    container_name: redis-db
    environment:
      - REDIS_PASSWORD=serbvn
    volumes:
      - redis_data:/var/lib/redis/data
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "serbvn"]
    networks:
      - mda-network
    hostname: redis

volumes:
  postgres-data:
    driver: local
  accounts-driver:
    driver: local
  redis_data:
    driver: local

# Define a custom network
networks:
  mda-network:
    driver: bridge