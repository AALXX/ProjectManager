services:
  # client-web:
  #   container_name: client-web
  #   build:
  #     context: ./client-web
  #     dockerfile: dev.Dockerfile
  #   env_file:
  #     - /client-web/.env
  #   volumes:
  #     - ./client-web/src:/app/src
  #     - ./client-web/public:/app/public
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - mda-network
  # client-web:
  #   container_name: client-web
  #   build:
  #     context: ./client-web
  #     dockerfile: dev.Dockerfile
  #   env_file:
  #     - /client-web/.env
  #   volumes:
  #     - ./client-web/src:/app/src
  #     - ./client-web/public:/app/public
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - mda-network

  main-backend-api:
    container_name: main-backend-api
    build:
      context: ./server/main-backend
      dockerfile: Dockerfile
    ports:
      - "7070:7070"
    env_file:
      - ./server/main-backend/.env
    environment:
      - NODE_ENV=production
      - SERVER_HOSTNAME=${SERVER_HOSTNAME}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ACCOUNT_SECRET=${ACCOUNT_SECRET}
      - CHANGE_PWD_SECRET=${CHANGE_PWD_SECRET}
      - CHANGE_GMAIL_SECRET=${CHANGE_GMAIL_SECRET}
      - ACCOUNTS_FOLDER_PATH=${ACCOUNTS_FOLDER_PATH}
      - MESSAGES_FOLDER_PATH=${MESSAGES_FOLDER_PATH}
      - PROJECTS_FOLDER_PATH=${PROJECTS_FOLDER_PATH}
      - REPOSITORIES_FOLDER_PATH=${REPOSITORIES_FOLDER_PATH}
      - PROJECT_DEPLOYMENT_FOLDER_PATH=${PROJECT_DEPLOYMENT_FOLDER_PATH}
      - GIT_REPOSITORY=${GIT_REPOSITORY}
      - FRONTEND_URL=${FRONTEND_URL}
      - FILE_SERVER_URL=${FILE_SERVER_URL}
      - FILE_SERVER_USERNAME=${FILE_SERVER_USERNAME}
      - FILE_SERVER_PASSWORD=${FILE_SERVER_PASSWORD}
      - platform_gmail=${platform_gmail}
      - platform_gmail_password=${platform_gmail_password}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASS=${EMAIL_PASS}
    volumes:
      - ./accounts:/accounts:rw
      - ./messages:/messages:rw
      - ./projects:/projects:rw
      - ./repos:/repos:rw
      - ./local-deployments:/local-deployments:rw
      - ./log:/app/log
    depends_on:
      - file-server
    restart: unless-stopped
  
    file-server:
       container_name: file-server
       image: s3rbvn/file-server:${IMAGE_TAG:-latest}
       ports:
         - "5600:5600"
       environment:
         # Server configuration
         - SERVER_HOST=${SERVER_HOST:-0.0.0.0:5600}
  
         # Database configuration
         - POSTGRESQL_HOST=${POSTGRESQL_HOST}
         - POSTGRESQL_PORT=${POSTGRESQL_PORT}
         - POSTGRESQL_USER=${POSTGRESQL_USER}
         - POSTGRESQL_PASS=${POSTGRESQL_PASS}
         - POSTGRESQL_DB=${POSTGRESQL_DB}
  
         # Authentication
         - AUTH_USERNAME=${AUTH_USERNAME}
         - AUTH_PASSWORD=${AUTH_PASSWORD}
  
       volumes:
         - ./accounts:/accounts:ro     
         - ./messages:/messages:ro      
       restart: unless-stopped
       networks:
         - ti-platform

  # postgres-db:
  #   image: postgres:latest
  #   container_name: postgres-container-mda
  #   environment:
  #     POSTGRES_USER: alx
  #     POSTGRES_PASSWORD: serbvn
  #     POSTGRES_DB: ti_db
  #     PGDATA: /var/lib/postgresql/data/pgdata
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #     - ./server/db/sql/postgresql.conf:/etc/postgresql/postgresql.conf
  #     - ./server/db/sql/pg_hba.conf:/etc/postgresql/pg_hba.conf
  #   command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
  #   restart: always
  #   networks:
  #     - mda-network
  #   hostname: postgres
  #   # healthcheck:
  #   #   test: ["CMD-SHELL", "pg_isready -U alx -d mda_db"]
  #   #   interval: 10s
  #   #   timeout: 5s
  #   #   retries: 5
  #   #   start_period: 10s
      
  # redis-db:
  #   image: redis:latest
  #   container_name: redis-db
  #   environment:
  #     - REDIS_PASSWORD=serbvn
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - "6379:6379"
  #   command: ["redis-server", "--requirepass", "serbvn", "--bind", "0.0.0.0"]
  #   networks:
  #     - ti-network
  #   hostname: redis
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "-a", "serbvn", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

# volumes:
#   postgres-data:
#     driver: local
#   accounts-driver:
#     driver: local
#   redis_data:
#     driver: local

networks:
  ti-platform:
    driver: bridge