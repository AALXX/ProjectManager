apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-server
  namespace: ti-platform
  labels:
    app: file-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file-server
  template:
    metadata:
      labels:
        app: file-server
    spec:
      initContainers:
      - name: init-directories
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Creating directories in /shared..."
          mkdir -p /shared/accounts /shared/projects /shared/repos /shared/local-deployments /shared/messages /shared/tmp
          chown -R 1000:1000 /shared
          chmod -R 755 /shared
          echo "Directories created successfully:"
          ls -la /shared/
          df -h /shared
        volumeMounts:
        - name: shared-storage
          mountPath: /shared
        securityContext:
          runAsUser: 0

      containers:
      - name: file-server
        image: s3rbvn/file-server:48-22330c8  # ðŸ”’ Use a specific tag in production
        ports:
        - containerPort: 5600
        env:
        - name: SERVER_HOST
          value: "0.0.0.0:5600"
        - name: AUTH_USERNAME
          value: "Titan"
        - name: AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: file-server-secrets
              key: AUTH_PASSWORD
        - name: ACCOUNTS_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: ACCOUNTS_FOLDER_PATH
        - name: PROJECTS_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: PROJECTS_FOLDER_PATH
        - name: REPOSITORIES_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: REPOSITORIES_FOLDER_PATH
        - name: PROJECT_DEPLOYMENT_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: PROJECT_DEPLOYMENT_FOLDER_PATH
        - name: MESSAGES_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: MESSAGES_FOLDER_PATH
        - name: TEMP_FOLDER_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: TEMP_FOLDER_PATH
        - name: SHARED_ROOT_PATH
          valueFrom:
            configMapKeyRef:
              name: ti-config
              key: SHARED_ROOT_PATH
        volumeMounts:
        - name: shared-storage
          mountPath: /shared
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
        readinessProbe:
          httpGet:
            path: /health
            port: 5600
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5600
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: shared-files-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: file-server-service
  namespace: ti-platform
spec:
  selector:
    app: file-server  # âœ… Fixed: Now matches the Deployment labels
  ports:
    - protocol: TCP
      port: 5600
      targetPort: 5600
  type: ClusterIP  # Internal service for Ingress